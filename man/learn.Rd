% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learn.R
\name{learn}
\alias{learn}
\title{Monte Carlo computation of posterior probability distribution}
\usage{
learn(
  data,
  metadata,
  auxdata = NULL,
  outputdir = NULL,
  nsamples = 3600,
  nchains = 8,
  nsamplesperchain = 450,
  parallel = NULL,
  seed = NULL,
  cleanup = TRUE,
  appendtimestamp = TRUE,
  appendinfo = TRUE,
  output = "directory",
  subsampledata = NULL,
  prior = missing(data) || is.null(data),
  startupMCiterations = 3600,
  minMCiterations = 0,
  maxMCiterations = +Inf,
  maxhours = +Inf,
  ncheckpoints = 12,
  maxrelMCSE = +Inf,
  minESS = 450,
  initES = 2,
  thinning = NULL,
  plottraces = !cleanup,
  showKtraces = FALSE,
  showAlphatraces = FALSE,
  hyperparams = list(ncomponents = 64, minalpha = -4, maxalpha = 4, byalpha = 1, Rshapelo
    = 0.5, Rshapehi = 0.5, Rvarm1 = 3^2, Cshapelo = 0.5, Cshapehi = 0.5, Cvarm1 = 3^2,
    Dshapelo = 0.5, Dshapehi = 0.5, Dvarm1 = 3^2, Bshapelo = 1, Bshapehi = 1, Dthreshold
    = 1, tscalefactor = 4.266, Oprior = "Hadamard", Nprior = "Hadamard", avoidzeroW =
    NULL, initmethod = "datacentre", Qerror = pnorm(c(-1, 1)))
)
}
\arguments{
\item{data}{A dataset, given as a \code{\link[base:data.frame]{base::data.frame()}} or as a file path to a CSV file.}

\item{metadata}{A \code{\link{metadata}} object, given either as a data.frame object, or as a file pa to a CSV file.}

\item{auxdata}{A larger dataset, given as a base::data.frame() or as a file path to a CSV file. Such a dataset would be too many to use in the Monte Carlo sampling, but can be used to calculate hyperparameters.}

\item{outputdir}{Character: path to folder where the output should be saved. If omitted, a directory is created that has the same name as the data file but with suffix "\verb{_output_}".}

\item{nsamples}{Integer: number of desired Monte Carlo samples. Default 3600.}

\item{nchains}{Integer: number of Monte Carlo chains. Default 4.}

\item{nsamplesperchain}{Integer: number of Monte Carlo samples per chain.}

\item{parallel}{Logical or \code{NULL} or positive integer: \code{TRUE}: use roughly half of available cores; \code{FALSE}: use serial computation; \code{NULL} (default): don't do anything (use pre-registered condition); integer: use this many cores.}

\item{seed}{Integer: use this seed for the random number generator. If missing or \code{NULL} (default), do not set the seed.}

\item{cleanup}{Logical: remove diagnostic files at the end of the computation? Default \code{TRUE}.}

\item{appendtimestamp}{Logical: append a timestamp to the name of the output directory \code{outputdir}? Default \code{TRUE}.}

\item{appendinfo}{Logical: append information about dataset and Monte Carlo parameters to the name of the output directory \code{outputdir}? Default \code{TRUE}.}

\item{output}{Character: if \code{'directory'}, return the output directory name as \code{VALUE}; if string \code{'learnt'}, return the \code{'learnt'} object containing the parameters obtained from the Monte Carlo computation. Any other value: \code{VALUE} is \code{NULL}.}

\item{subsampledata}{Integer: use only a subset of this many datapoints for the Monte Carlo computation.}

\item{prior}{Logical: Calculate the prior distribution?}

\item{startupMCiterations}{Integer: number of initial Monte Carlo iterations. Default 3600.}

\item{minMCiterations}{Integer: minimum number of Monte Carlo iterations to be doneby a chain. Default 0.}

\item{maxMCiterations}{Integer: Do at most this many Monte Carlo iterations per chain. Default \code{Inf}.}

\item{maxhours}{Numeric: approximate time limit, in hours, for the Monte Carlo computation to last. Default \code{Inf}.}

\item{ncheckpoints}{Integer: number of datapoints to use for checking when the Monte Carlo computation should end. If \code{NULL}, this is equal to number of variates + 2. If Inf, use all datapoints. Default 12.}

\item{maxrelMCSE}{Numeric positive: desired maximal \emph{relative Monte Carlo Standard Error} of calculated probabilities with respect to their variability with new data. Default \code{+Inf}, so that \code{minESS} is used instead. \code{maxrelMCSE} is related to \code{minESS} by \code{maxrelMCSE = 1/sqrt(minESS + initES)}.}

\item{minESS}{Numeric positive: desired minimal Monte Carlo \emph{Expected Sample Size}. If \code{NULL}, it is equal to the final \code{nsamplesperchain}. Default 400. \code{minESS} is related to \code{maxrelMCSE} by \code{minESS = 1/maxrelMCSE^2 - initES}.}

\item{initES}{Numeric positive: number of initial  \emph{Expected Samples} to discard.}

\item{thinning}{Integer: thin out the Monte Carlo samples by this value. If \code{NULL} (default): let the diagnostics decide the thinning value.}

\item{plottraces}{Logical: save plots of the Monte Carlo traces of diagnostic values? Default \code{TRUE}.}

\item{showKtraces}{Logical: save plots of the Monte Carlo traces of the K parameter? Default \code{FALSE}.}

\item{showAlphatraces}{Logical: save plots of the Monte Carlo traces of the Alpha parameter? Default \code{FALSE}.}

\item{hyperparams}{List: hyperparameters of the prior.}
}
\value{
Name of directory containing output files, or learnt object, or \code{NULL}, depending on argument \code{output}.
}
\description{
Core function to compute the posterior probability distribution of the variates conditional on the given data.
}
\details{
This function takes as main inputs a set of data and metadata, and computes the probability distribution for new data. Its computation can also be interpreted as an estimation of the frequencies of the variates in the \emph{whole population}, beyond the sample data. The probability distribution is not assumed to be Gaussian or of any other specific shape. The computation is done via Markov-chain Monte Carlo.

This function creates an object, contained in a \code{learnt.rds} file, which is used in all subsequent probabilistic computations. Other information about the computation is provided in logs and plots, saved in a directory specified by the user.

See \code{vignette("inferno_start")} for an introductory example.
}
